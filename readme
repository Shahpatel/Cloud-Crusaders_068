Introduction
This project simulates a basic chat application using JavaScript. The application allows users to register, send messages, view chat history, and manage group chats. The main objective is to provide hands-on experience with JavaScript classes, arrays, and user interactions.

Project Type
Backend (using Node.js for scripting)
Directory Structure

chat-application/
|--Test.js
├── chat.js
└── package.json
Setup
Environment Setup
Create Project Directory:

mkdir chat-application
cd chat-application
Initialize Node.js Project (if needed):

npm init -y
Create JavaScript File:

touch chat.js
Script Overview
ChatApp Class
The ChatApp class provides functionality for user registration, sending messages, displaying chat histories, and managing group chats.

Methods:
registerUser(username): Registers a new user.
sendMessage(sender, recipient, message): Sends a message between users.
displayChatHistory(user1, user2): Displays all messages exchanged between two users.
createGroupChat(groupName, members): Creates a new group chat.
addUserToGroup(groupName, user): Adds a user to an existing group chat.
removeUserFromGroup(groupName, user): Removes a user from a group chat.
Hard-Coded Data and Operations
The script includes hard-coded users, messages, and group chats to demonstrate the functionality of the ChatApp class methods.

Code Structure and Testing
Testing Methods:

Use the methods with hard-coded data to ensure they work as expected.
Log results to the console for verification.
Code Comments:

The code is commented to explain each part of the implementation, including the purpose of each method and its interaction with the chat application.
Installation & Getting Started
To run the script, simply use Node.js:


# Navigate to the project directory
cd chat-application

# Run the script
node chat.js
Usage
The chat.js file contains examples demonstrating the use of ChatApp methods:


const chatApp = new ChatApp();

// Register users
chatApp.registerUser('Alice');
chatApp.registerUser('Bob');

// Send messages
chatApp.sendMessage('Alice', 'Bob', 'Hello Bob!');

// Display chat history
chatApp.displayChatHistory('Alice', 'Bob');

// Create and manage group chats
chatApp.createGroupChat('Friends', ['Alice', 'Bob']);
chatApp.addUserToGroup('Friends', 'Charlie');
chatApp.removeUserFromGroup('Friends', 'Bob');
Credentials
No authentication required for this simulation.

APIs Used
No external APIs are used in this project.

Technology Stack
JavaScript
Node.js









